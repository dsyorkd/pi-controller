// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.21.12
// source: proto/pi_controller.proto

package pi_controller

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Placeholder gRPC service definitions for Phase 1
// This would normally be auto-generated from the .proto file

// PiControllerServiceClient is the client API for PiControllerService service.
type PiControllerServiceClient interface {
	Health(ctx context.Context, in *HealthRequest, opts ...grpc.CallOption) (*HealthResponse, error)
	CreateCluster(ctx context.Context, in *CreateClusterRequest, opts ...grpc.CallOption) (*Cluster, error)
	GetCluster(ctx context.Context, in *GetClusterRequest, opts ...grpc.CallOption) (*Cluster, error)
	ListClusters(ctx context.Context, in *ListClustersRequest, opts ...grpc.CallOption) (*ListClustersResponse, error)
	CreateNode(ctx context.Context, in *CreateNodeRequest, opts ...grpc.CallOption) (*Node, error)
	GetNode(ctx context.Context, in *GetNodeRequest, opts ...grpc.CallOption) (*Node, error)
	ReadGPIO(ctx context.Context, in *ReadGPIORequest, opts ...grpc.CallOption) (*ReadGPIOResponse, error)
	WriteGPIO(ctx context.Context, in *WriteGPIORequest, opts ...grpc.CallOption) (*WriteGPIOResponse, error)
}

// PiControllerServiceServer is the server API for PiControllerService service.
type PiControllerServiceServer interface {
	Health(context.Context, *HealthRequest) (*HealthResponse, error)
	CreateCluster(context.Context, *CreateClusterRequest) (*Cluster, error)
	GetCluster(context.Context, *GetClusterRequest) (*Cluster, error)
	ListClusters(context.Context, *ListClustersRequest) (*ListClustersResponse, error)
	CreateNode(context.Context, *CreateNodeRequest) (*Node, error)
	GetNode(context.Context, *GetNodeRequest) (*Node, error)
	ReadGPIO(context.Context, *ReadGPIORequest) (*ReadGPIOResponse, error)
	WriteGPIO(context.Context, *WriteGPIORequest) (*WriteGPIOResponse, error)
	mustEmbedUnimplementedPiControllerServiceServer()
}

// UnimplementedPiControllerServiceServer must be embedded to have forward compatible implementations.
type UnimplementedPiControllerServiceServer struct{}

func (UnimplementedPiControllerServiceServer) Health(context.Context, *HealthRequest) (*HealthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Health not implemented")
}

func (UnimplementedPiControllerServiceServer) CreateCluster(context.Context, *CreateClusterRequest) (*Cluster, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCluster not implemented")
}

func (UnimplementedPiControllerServiceServer) GetCluster(context.Context, *GetClusterRequest) (*Cluster, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCluster not implemented")
}

func (UnimplementedPiControllerServiceServer) ListClusters(context.Context, *ListClustersRequest) (*ListClustersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListClusters not implemented")
}

func (UnimplementedPiControllerServiceServer) CreateNode(context.Context, *CreateNodeRequest) (*Node, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNode not implemented")
}

func (UnimplementedPiControllerServiceServer) GetNode(context.Context, *GetNodeRequest) (*Node, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNode not implemented")
}

func (UnimplementedPiControllerServiceServer) ReadGPIO(context.Context, *ReadGPIORequest) (*ReadGPIOResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadGPIO not implemented")
}

func (UnimplementedPiControllerServiceServer) WriteGPIO(context.Context, *WriteGPIORequest) (*WriteGPIOResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WriteGPIO not implemented")
}

func (UnimplementedPiControllerServiceServer) mustEmbedUnimplementedPiControllerServiceServer() {}

// UnsafePiControllerServiceServer may be embedded to opt out of forward compatibility for this service.
type UnsafePiControllerServiceServer interface {
	mustEmbedUnimplementedPiControllerServiceServer()
}

func RegisterPiControllerServiceServer(s grpc.ServiceRegistrar, srv PiControllerServiceServer) {
	s.RegisterService(&PiControllerService_ServiceDesc, srv)
}

// Placeholder service descriptor
var PiControllerService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pi_controller.PiControllerService",
	HandlerType: (*PiControllerServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
}

// Placeholder message types
type HealthRequest struct{}
type HealthResponse struct {
	Status    string `json:"status"`
	Timestamp string `json:"timestamp"`
	Version   string `json:"version"`
	Uptime    string `json:"uptime"`
}

type CreateClusterRequest struct {
	Name           string `json:"name"`
	Description    string `json:"description"`
	Version        string `json:"version"`
	MasterEndpoint string `json:"master_endpoint"`
}

type GetClusterRequest struct {
	Id uint32 `json:"id"`
}

type ListClustersRequest struct {
	Page     int32 `json:"page"`
	PageSize int32 `json:"page_size"`
}

type ListClustersResponse struct {
	Clusters   []*Cluster `json:"clusters"`
	TotalCount int32      `json:"total_count"`
}

type CreateNodeRequest struct {
	Name         string `json:"name"`
	IpAddress    string `json:"ip_address"`
	MacAddress   string `json:"mac_address"`
	Role         NodeRole `json:"role"`
	Architecture string `json:"architecture"`
	Model        string `json:"model"`
	SerialNumber string `json:"serial_number"`
	CpuCores     int32  `json:"cpu_cores"`
	Memory       int64  `json:"memory"`
	ClusterId    *uint32 `json:"cluster_id,omitempty"`
}

type GetNodeRequest struct {
	Id uint32 `json:"id"`
}

type ReadGPIORequest struct {
	Id uint32 `json:"id"`
}

type ReadGPIOResponse struct {
	DeviceId  uint32  `json:"device_id"`
	Pin       int32   `json:"pin"`
	Value     float64 `json:"value"`
	Timestamp string  `json:"timestamp"`
}

type WriteGPIORequest struct {
	Id    uint32 `json:"id"`
	Value int32  `json:"value"`
}

type WriteGPIOResponse struct {
	DeviceId  uint32 `json:"device_id"`
	Pin       int32  `json:"pin"`
	Value     int32  `json:"value"`
	Timestamp string `json:"timestamp"`
}

// Placeholder methods for messages
func (x *HealthRequest) Reset()         {}
func (x *HealthRequest) String() string { return "" }
func (*HealthRequest) ProtoMessage()    {}

func (x *HealthResponse) Reset()         {}
func (x *HealthResponse) String() string { return "" }
func (*HealthResponse) ProtoMessage()    {}

func (x *CreateClusterRequest) Reset()         {}
func (x *CreateClusterRequest) String() string { return "" }
func (*CreateClusterRequest) ProtoMessage()    {}

func (x *GetClusterRequest) Reset()         {}
func (x *GetClusterRequest) String() string { return "" }
func (*GetClusterRequest) ProtoMessage()    {}

func (x *ListClustersRequest) Reset()         {}
func (x *ListClustersRequest) String() string { return "" }
func (*ListClustersRequest) ProtoMessage()    {}

func (x *ListClustersResponse) Reset()         {}
func (x *ListClustersResponse) String() string { return "" }
func (*ListClustersResponse) ProtoMessage()    {}