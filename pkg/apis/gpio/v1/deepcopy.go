package v1

import (
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GPIOPin) DeepCopyInto(out *GPIOPin) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GPIOPin.
func (in *GPIOPin) DeepCopy() *GPIOPin {
	if in == nil {
		return nil
	}
	out := new(GPIOPin)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GPIOPin) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GPIOPinList) DeepCopyInto(out *GPIOPinList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GPIOPin, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GPIOPinList.
func (in *GPIOPinList) DeepCopy() *GPIOPinList {
	if in == nil {
		return nil
	}
	out := new(GPIOPinList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GPIOPinList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GPIOPinSpec) DeepCopyInto(out *GPIOPinSpec) {
	*out = *in
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(GPIODirection)
		**out = **in
	}
	if in.InitialValue != nil {
		in, out := &in.InitialValue, &out.InitialValue
		*out = new(GPIOValue)
		**out = **in
	}
	if in.PullMode != nil {
		in, out := &in.PullMode, &out.PullMode
		*out = new(GPIOPullMode)
		**out = **in
	}
	if in.DebounceMs != nil {
		in, out := &in.DebounceMs, &out.DebounceMs
		*out = new(int)
		**out = **in
	}
	if in.PWMFrequency != nil {
		in, out := &in.PWMFrequency, &out.PWMFrequency
		*out = new(int)
		**out = **in
	}
	if in.PWMDutyCycle != nil {
		in, out := &in.PWMDutyCycle, &out.PWMDutyCycle
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GPIOPinSpec.
func (in *GPIOPinSpec) DeepCopy() *GPIOPinSpec {
	if in == nil {
		return nil
	}
	out := new(GPIOPinSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GPIOPinStatus) DeepCopyInto(out *GPIOPinStatus) {
	*out = *in
	if in.ActualFrequency != nil {
		in, out := &in.ActualFrequency, &out.ActualFrequency
		*out = new(int)
		**out = **in
	}
	if in.ActualDutyCycle != nil {
		in, out := &in.ActualDutyCycle, &out.ActualDutyCycle
		*out = new(float64)
		**out = **in
	}
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]GPIOCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GPIOPinStatus.
func (in *GPIOPinStatus) DeepCopy() *GPIOPinStatus {
	if in == nil {
		return nil
	}
	out := new(GPIOPinStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GPIOCondition) DeepCopyInto(out *GPIOCondition) {
	*out = *in
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GPIOCondition.
func (in *GPIOCondition) DeepCopy() *GPIOCondition {
	if in == nil {
		return nil
	}
	out := new(GPIOCondition)
	in.DeepCopyInto(out)
	return out
}

// PWMController DeepCopy methods

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PWMController) DeepCopyInto(out *PWMController) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PWMController.
func (in *PWMController) DeepCopy() *PWMController {
	if in == nil {
		return nil
	}
	out := new(PWMController)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PWMController) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PWMControllerList) DeepCopyInto(out *PWMControllerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PWMController, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PWMControllerList.
func (in *PWMControllerList) DeepCopy() *PWMControllerList {
	if in == nil {
		return nil
	}
	out := new(PWMControllerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PWMControllerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PWMControllerSpec) DeepCopyInto(out *PWMControllerSpec) {
	*out = *in
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Channels != nil {
		in, out := &in.Channels, &out.Channels
		*out = make([]PWMChannel, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PWMControllerSpec.
func (in *PWMControllerSpec) DeepCopy() *PWMControllerSpec {
	if in == nil {
		return nil
	}
	out := new(PWMControllerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PWMChannel) DeepCopyInto(out *PWMChannel) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PWMChannel.
func (in *PWMChannel) DeepCopy() *PWMChannel {
	if in == nil {
		return nil
	}
	out := new(PWMChannel)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PWMControllerStatus) DeepCopyInto(out *PWMControllerStatus) {
	*out = *in
	if in.ChannelStatus != nil {
		in, out := &in.ChannelStatus, &out.ChannelStatus
		*out = make([]PWMChannelStatus, len(*in))
		copy(*out, *in)
	}
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]PWMCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PWMControllerStatus.
func (in *PWMControllerStatus) DeepCopy() *PWMControllerStatus {
	if in == nil {
		return nil
	}
	out := new(PWMControllerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PWMChannelStatus) DeepCopyInto(out *PWMChannelStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PWMChannelStatus.
func (in *PWMChannelStatus) DeepCopy() *PWMChannelStatus {
	if in == nil {
		return nil
	}
	out := new(PWMChannelStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PWMCondition) DeepCopyInto(out *PWMCondition) {
	*out = *in
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PWMCondition.
func (in *PWMCondition) DeepCopy() *PWMCondition {
	if in == nil {
		return nil
	}
	out := new(PWMCondition)
	in.DeepCopyInto(out)
	return out
}

// I2CDevice DeepCopy methods

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *I2CDevice) DeepCopyInto(out *I2CDevice) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new I2CDevice.
func (in *I2CDevice) DeepCopy() *I2CDevice {
	if in == nil {
		return nil
	}
	out := new(I2CDevice)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *I2CDevice) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *I2CDeviceList) DeepCopyInto(out *I2CDeviceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]I2CDevice, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new I2CDeviceList.
func (in *I2CDeviceList) DeepCopy() *I2CDeviceList {
	if in == nil {
		return nil
	}
	out := new(I2CDeviceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *I2CDeviceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *I2CDeviceSpec) DeepCopyInto(out *I2CDeviceSpec) {
	*out = *in
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Registers != nil {
		in, out := &in.Registers, &out.Registers
		*out = make([]I2CRegister, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new I2CDeviceSpec.
func (in *I2CDeviceSpec) DeepCopy() *I2CDeviceSpec {
	if in == nil {
		return nil
	}
	out := new(I2CDeviceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *I2CRegister) DeepCopyInto(out *I2CRegister) {
	*out = *in
	if in.InitialValue != nil {
		in, out := &in.InitialValue, &out.InitialValue
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new I2CRegister.
func (in *I2CRegister) DeepCopy() *I2CRegister {
	if in == nil {
		return nil
	}
	out := new(I2CRegister)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *I2CDeviceStatus) DeepCopyInto(out *I2CDeviceStatus) {
	*out = *in
	if in.RegisterData != nil {
		in, out := &in.RegisterData, &out.RegisterData
		*out = make(map[string]interface{}, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.LastScan != nil {
		in, out := &in.LastScan, &out.LastScan
		*out = (*in).DeepCopy()
	}
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]I2CCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new I2CDeviceStatus.
func (in *I2CDeviceStatus) DeepCopy() *I2CDeviceStatus {
	if in == nil {
		return nil
	}
	out := new(I2CDeviceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *I2CCondition) DeepCopyInto(out *I2CCondition) {
	*out = *in
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new I2CCondition.
func (in *I2CCondition) DeepCopy() *I2CCondition {
	if in == nil {
		return nil
	}
	out := new(I2CCondition)
	in.DeepCopyInto(out)
	return out
}
